Notes 7/13/17

Symmetric Lenses on Strings
  Symmetric Lenses are defined fairly theoretically, useful to have a subset for
      for strings for practicality
    Furthermore, composition, as its defined in symmetric lenses, requires a
      way to hold an arbitrarily large complement

Generally, what do we want to solve?
  Want to be able to remove data when converting between one format and another
  What about using some operator to say "this is deleted when going over"
    Useful, probably best to have both synthesis and also allow for this by
        users

Combinators:
  Currently have a delete left and delete right operation, why not have a
      "dual" lens which just swaps left and right
    Maybe have if other use cases?
      Other use cases: Composition, have predefined lenses l:S<->T   k:U<->T,
          want to be able to compose them, even though T target for both
  Composition doesn't need a complement for intermediary
    Intermediary data doesn't really matter to outside world, just retrieve the
        default from the other side
  
Solomon's been getting intuition on examples from data.gov
  Spent too long on combinators, ran out of time to talk more :(
  Could be good to get another pair of eyes on category thy treatment / ideas
      for how to prove?
