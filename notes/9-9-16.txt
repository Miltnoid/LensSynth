Done last week by Anders
    Play with FlashFill
        Does well with structured data, but bad at reorderings
    Play with FlashExtract
        Also does well with structured data, but bad at reorderings
    What can it do
        A lot
        Very good at figuring out the structure, when its well structured
        Good at handling printouts from online that have normal form
    What can't it do
        Handle not super-normalized data
        Give guarantees of being able to handle things
            Sometimes it won't work, what if that happened in prod
Done last week by Nicolas / Richard
    Started getting up to speed!
    Started figuring out pain points of the system as it is currently
        Not being able to iteratively build them up is a problem
            (We actually can do that, look at bibtex_example for an example!)
        It stinks there's no reorderings of the terms
            Good motivation for need for quotient lenses
        It stinks that we have to hide whitespace away
            Good motivation for need for quotient lenses
'par' operator
    A par B := A.B | B.A
    Equational theory of regex with par, does it change beyond adding definition
     of par into equational theory?
    Is there a difference between A par (B par C) and npar [A;B;C]
        Yes, A par (B par C) doesn't allow for B.A.C
    There is a relationship between par and size of the regex for languages
    Might also be good to have nary par with separator
        Could this be syntactic sugar?  Should it?
    N-ary seems more likely to have an interesting change with equational theory
    Say par becomes special, how should we change synthesis algorithm for it
    First, what does a par lens mean
        What would typechecking be like?
            Must be disjoint
            What else?
        What would the semantics be?
            Order them, and apply?
            Something else?
            What do we do when given a reordering, do we propagate it?
        Par lenses should probably be more than merely l1.l2|l2.l1
            Maybe it should?
                What would happen if it were, what would alternative be
Two different way to represent the same thing problem
    In bibtex, names can be LAST, FIRST or FIRST LAST
    Want to not care, how do we do that?
    They both map to the same thing, maybe a combine combinator
        l1: A <-> C   l2: B <-> C   weakor(l1,l2)   A or B <-> C
        left to right does the obvious
        right to left chooses first
    Bijective modulo "quotient" on left with right
    Should we require this put in through a new operator on regex?
        Or should the synthesis algorithm be able to figure it out?
        Is this the only type with a quotient in it
            No, par lens also is that
    What if we try to figure out what the quotients are?
        Find when two things on same dnf are in bijective correspondence
        Those things could potentially go to the same place
Whitespace problem
    Doesn't fall in same area as or problem, as not bijective any more
    However, if there's a surjection, it does work
Par is actually shorthand for a.b|b.a with a quotient as well
We have par, and npar, what about parstar
    We have a lot of things, but they can get reordered
    This sounds a lot like dictionary lenses, or a similar problem to them
For time being, we have enough to keep writing a paper though
Dig into code, and paper to learn about implementation
Anders should write down the implementation section to be read by R+N
R+N read through code, but try to make targeted change with things had in mind

TODOs:
    Anders:
        write more, make easy to read, etc. etc.
    Richard + Nicolas:
        Get familiar with the codebase
        Get familiar with our current solution
        N-Par formalisms
            Write down the syntax, semantics, and typing for an npar lens/regex
        Whitespace
            Think about what would be the source-level regex type for this
            What would be the source level lens for these
        Think about synthesis AFTER those are well formalized
        What would the equational theories of these be afterwards?





