rigid_dnf_synth(dr,ds,e) =
  recurses over dr, ds, fast, checks e

dnfsynth(dr,ds,e) = 
  let drdsqueue = [(dr’,ds’) | …] (* all rewrites *)
  return the first dl such that rigid_dnf_synth(dr’,ds’,e)=Some dl

synth(r,s,e) = 
  let dl =  dnfsynth(dnf(r),dnf(s),e)
  undnf(dl)




CORRECTNESS OF rigid_dnf_synth
Given dr and ds,
e subset [dr] x [ds]
there exists a dnf lens dl :_{no rewrite} dr <-> ds that satisfies e iff
running the synthesis algorithm rigid_dnf_synth(dr,ds,e) will generate a lens dl’ :_{no rewrite} dr <-> ds where l’ |= e


CORRECTNESS OF dnfsynth
Given dr and ds,
e subset [dr] x [ds]
there exists a dnf lens dl : dr <-> ds |= e iff
running the synthesis algorithm dnfsynth(dr,ds,e) will generate a lens dl’ : dr <-> ds where l’ |= e
~~~REPHRASING (NOT DOING)~~~
Given r and s,
e subset [r] x [s]
there exists lens l : r <-> s |= e iff
running the synthesis algorithm dnfsynth(dnf(r),dnf(s,e) will generate a lens dl’ : dr <-> ds where l’ |= e
~~~     ~~~


Proof Outline:
  If there exists dl : dr <=> ds |= e, then there is a derivation
  Searching for existence is merely considering all possible rewrites
  Then search within rigid

WEAK COMPLETENESS (lemma)
l : r <=> s
exists
dr’, ds’
LanguageOf(dr’)=LanguageOf(dnf(r))=LanguageOf(r)
LanguageOf(ds’)=LanguageOf(dnf(s))=LanguageOf(s)
there exists a dnf lens dl :_{no rewrite} dr’ <=> ds’
sem(dl) = sem(l)

STRONG COMPLETENESS (lemma)
l : r <=> s
for all
dr’, ds’
LanguageOf(dr’)=LanguageOf(dnf(r))=LanguageOf(r)
LanguageOf(ds’)=LanguageOf(dnf(s))=LanguageOf(s)
there exists a dnf lens dl : dr’ <=> ds’
sem(dl) = sem(l)
Proof:
By Weak Completeness: Exists dr’’, ds’’, dl such that dl :_{nr} dr’’ <-> ds’’
			L(dr’’)=L(dr’), L(ds’’)=L(ds’)
There exists a series of applications of equational rules of dnf regular expressions that prove L(dr’’)=L(dr’), L(ds’’)=L(ds’)

=_{Rewrites} = Language Equality
	The equational theory of dnf regular expressions = the minimal equivalence relation generated by Rewrite
			   isom~(dr_3)
			/	|	\
		/		|		\
	/			|			\
isom~(dr’)/\/\/\/\		|			 /\/\/\	isom~(ds’)
		  \/\/\/\isom~(dr’’)=isom~(ds’’)/\/\/\/\/


COMPLETENESS OF DNF LENSES
l : r <=> s
there exists a dnf lens dl : dnf(r) <=> dnf(s)
sem(dl) = sem(l)


CORRECTNESS OF synth
Given r and s,
e subset [r] x [s]
there exists a lens l : r <-> s |= e iff
The running the synthesis algorithm synth(r,s,e) will generate a lens l’ : r <-> s |= e

Proof:
  (<=) By correctness of dnf, undnf, and dnfsynth (<=)
  (=>)
    Suppose there is a lens l : r <-> s |= e
    By completeness of dnf lenses, there exists a dnf lens dl : dnf(r) <-> dnf(s) [l]=[dl]
	(in particular, dl |= e)
    By of dnfsynth (=>)*REMAINSTOBEDONE, dnfsynth(dnf(r),dnf(s),e)=dl’ such that dl’ |= e
    l’ = undnf(dl’). (By soundness of dnf lenses, undnf(dl’) satisfies requirements
                        udnfl(dl’) : r <=> s, |= e)




