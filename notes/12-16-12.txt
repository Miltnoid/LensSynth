The problem:
Given
  l: r -> W(q)
  W(q) -> K(q)
Want to synthesize quotient lens r -> K(q) that is in the form of
W(q') -> K(q') for some q'. The idea is to rewrite W(q) into a form
that is compatible with the type of l, after which we can move l
into the middle. 

The derivation tree for the typing judgement of lenses
l: A <-> B contains three forms:
(1) equivalence rules that rewrite A or B.
(2) composition rule which inserts an intermediate C.
(3) pure structural (concatenation etc.).

Proposal/Conjecture 1: We can push structural forms to the leaves of
the derivation tree.
Example: (l1 ; l2)* => l1* ; l2*

Proposal/Conjecture 2: We can push equivalence forms out of
compositions.
Consider l: A <-equiv-> B. This notation means, in the
simple case, that l is a lens between A and B such that
(1) there exists a lens l_A: A <-> C and a lens l_B: C' <-> B, 
(2) C is equivalent to C' witnessed by some equivalence rewrite rules, and 
(3) the "composition" l_A; l_B is equal to l modulo the rewrite rules.
The conjecture is that we can push these equivalence rules to either
side, following their expansion order. (which to which?)
