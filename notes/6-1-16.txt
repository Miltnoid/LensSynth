Notes:

Nits on paper:
	Distinguishing version of [ ] for regular expressions
	As benjamin suggested, use infix notation + and . for ConcatDNF
		Maybe use instead operator (+) (.) versions
	No structure in document
		Add sections & subsections
		i.e. Regular expressions: Normalized Syntax: .etc...
	Remove discussion section & motivation through failures
		Sometimes it is good
		Usually it isn't
			Just adds additional confusion for reader
		Concentrate on what we DID not what we TRIED
	No need for LanguageOf in Lenses
	Make .! and ^{!*} consistent
Overall structure of paper
	Do hand in hand
General things
	Automation of stuff good gives dividends
	Currently have paper & big appendix
		Instead have short & long version
		Long version = short + interleaved proofs
	ConcatDNF stuff
		Curried vs noncurried types
		Fix Fix Fix the types
Next section start?
	Implementation
		Don't do b/c it might change based on evaluation
	Experimental
		Better
Experimental section
	Need to get done
	Write out info
	Auto-graphs
	Add test and examples & get graphs written out
Metrics
	Time
	Random gen exps to synth
	Comparison of folding vs leaving as it is
	Explore more of where it doesn't work
		Even if only adversarial, try to find limitations
			Smallest example it explodes on
What's it feel like to use
	Non-examples
	Examples that don't match type
	Goes in discussion section, adds depth to say strengths / weaknesses
	Showcase example of running reader through.
		Scale & ease of understanding
			Look cool
		File format stuff
			bibtex vs other reps acm digital lib
			bibtex to mla?
Whole test suite
	Submit anonymous tarbell or something
	Add arxiv w/ full data

Fixing text
	Reread aloud
	Reread to duck
TODOs
	Refix stuff
	Overall structure and section headers
		Bullets with ideas as 1 level down
	Experimental Results
		Automate graphs
		Text around graphs
			Explain axes
			Explain what is good
	Think of a nice running example
	When run experiements, keep an eye out for good / bad results
		Why are there these differences, maybe can show where weak 




	
