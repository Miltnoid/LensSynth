Went over what was done
	Basic versions of proofs, modulo some trivial lemmas

What remains to be done
	Advanced versions of proofs
	Various difficulties
		When expanding something, we gain additional capabilities
			Don't lose stuff
			a* <=> b* correlates to iterate(const(a,b))
			e + aa* <=> e + bb* corr to e<->e | a<->b.iterate(a<->b)
		Sometimes expansions are necessary thought
		Sometimes conflicting expansions done
			e + aa* <=> (aa)*+a(aa)*
			Need ways to bring the conflicting expansions back
				Apply right exp to left, left to right
				e + a(aa)* + aa(aa)* <=> e + aa(aa)* + a(aa)*
			Diamond property / confluence

Confluence learning
	http://www.inf.ed.ac.uk/publications/online/0046/b207.pdf
	John Mitchell's foundations of PL has some info on it
	Compare 2 regexps, mapping between theWent over what was done
	Basic versions of proofs, modulo some trivial lemmas

What remains to be done
	Advanced versions of proofs
	Various difficulties
		When expanding something, we gain additional capabilities
			Don't lose stuff
			a* <=> b* correlates to iterate(const(a,b))
			e + aa* <=> e + bb* corr to e<->e | a<->b.iterate(a<->b)
		Sometimes expansions are necessary thought
		Sometimes conflicting expansions done
			e + aa* <=> (aa)*+a(aa)*
			Need ways to bring the conflicting expansions back
				Apply right exp to left, left to right
				e + a(aa)* + aa(aa)* <=> e + aa(aa)* + a(aa)*
			Diamond property / confluence

Confluence learning
	http://www.inf.ed.ac.uk/publications/online/0046/b207.pdf
	John Mitchell's foundations of PL has some info on it
	General Strategy, define parallel reduction, then prove diamond property
	Compare 2 regexps, mapping between them
	Try to utilize that technique for this problem, as it's similar

TODOs:
	Proofs
	If I need brief break from proofs, do bibtex example
